[tool.black]
line-length = 100

[tool.isort]
line_length = 100
case_sensitive = true
use_parentheses = true
include_trailing_comma = true
multi_line_output = 3
force_grid_wrap = 0

[tool.poetry]
name = "geospatial-data-lake"
version = "0.1.0"
description = "Central storage, management and access for important geospatial datasets developed by LINZ"
authors = [
    "Bill M. Nelson <bmnelson@linz.govt.nz>",
    "Daniel Silk <dsilk@linz.govt.nz>",
    "Ivan Mincik <ivan.mincik@gmail.com>",
    "Sandro Santilli <strk@kbt.io>",
    "Simon Planzer <splanzer@linz.govt.nz>",
    "Victor Engmark <vengmark@linz.govt.nz>",
]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8,<3.9"
"aws-cdk.aws-dynamodb" = {version="*", optional=true}
"aws-cdk.aws-ec2" = {version="*", optional=true}
"aws-cdk.aws-ecr" = {version="*", optional=true}
"aws-cdk.aws-ecr_assets" = {version="*", optional=true}
"aws-cdk.aws-ecs" = {version="*", optional=true}
"aws-cdk.aws-iam" = {version="*", optional=true}
"aws-cdk.aws-lambda" = {version="*", optional=true}
"aws-cdk.aws-s3" = {version="*", optional=true}
"aws-cdk.aws-stepfunctions" = {version="*", optional=true}
"aws-cdk.aws-stepfunctions_tasks" = {version="*", optional=true}
awscli = {version="*", optional=true}
cattrs = {version="*", optional=true}
jsonschema = {version="*", extras = ["format"], optional=true}
pynamodb = {version="*", optional=true}
strict-rfc3339 = {version = "*", optional = true}

[tool.poetry.dev-dependencies]
black = "*"
boto3 = "*"
gitlint = "*"
isort = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-randomly = "*"
shellcheck-py = "*"
yamlfmt = {url = "https://github.com/jumanjihouse/pre-commit-hook-yamlfmt/archive/0.1.0.tar.gz"}
yamllint = "*"

[tool.poetry.extras]
cdk = [
    "aws-cdk.aws-dynamodb",
    "aws-cdk.aws-ec2",
    "aws-cdk.aws-ecr",
    "aws-cdk.aws-ecr_assets",
    "aws-cdk.aws-ecs",
    "aws-cdk.aws-iam",
    "aws-cdk.aws-lambda",
    "aws-cdk.aws-s3",
    "aws-cdk.aws-stepfunctions",
    "aws-cdk.aws-stepfunctions_tasks",
    "awscli",
    "cattrs",
]
datasets-endpoint = [
    "jsonschema",
    "pynamodb",
]
check-stac-metadata-job = [
    "jsonschema",
    "strict-rfc3339",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
markers = [
    "infrastructure: requires a deployed infrastructure",
]
