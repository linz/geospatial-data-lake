[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.coverage.report]
fail_under = 82

[tool.coverage.run]
source = [
    "datalake",
    "tests",
]

[tool.isort]
line_length = 100
case_sensitive = true
use_parentheses = true
include_trailing_comma = true
multi_line_output = 3
force_grid_wrap = 0

[tool.poetry]
name = "geospatial-data-lake"
version = "0.1.0"
description = "Central storage, management and access for important geospatial datasets developed by LINZ"
authors = [
    "Bill M. Nelson <bmnelson@linz.govt.nz>",
    "Daniel Silk <dsilk@linz.govt.nz>",
    "Ivan Mincik <ivan.mincik@gmail.com>",
    "Sandro Santilli <strk@kbt.io>",
    "Simon Planzer <splanzer@linz.govt.nz>",
    "Victor Engmark <vengmark@linz.govt.nz>",
]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8,<3.9"

[tool.poetry.dependencies."aws-cdk.aws-dynamodb"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-ec2"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-ecr"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-ecr_assets"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-ecs"]
version = "^1.73"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-iam"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-lambda"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-s3"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-stepfunctions"]
version = "*"
optional = true

[tool.poetry.dependencies."aws-cdk.aws-stepfunctions_tasks"]
version = "*"
optional = true

[tool.poetry.dependencies.awscli]
version = "*"
optional = true

[tool.poetry.dependencies.boto3]
version = "*"
optional = true

[tool.poetry.dependencies.cattrs]
version = "*"
optional = true

[tool.poetry.dependencies.jsonschema]
version = "*"
extras = ["format"]
optional = true

[tool.poetry.dependencies.multihash]
version = "*"
optional = true

[tool.poetry.dependencies.pynamodb]
version = "<5"
optional = true

[tool.poetry.dependencies.strict-rfc3339]
version = "*"
optional = true

[tool.poetry.dev-dependencies]
black = "*"
gitlint = "*"
ipdb = "*"
isort = "*"
language-formatters-pre-commit-hooks = "*"
mypy = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-randomly = "*"
pytest-subtests = "*"
pytest-timeout = "*"
shellcheck-py = "*"

[tool.poetry.dev-dependencies.boto3-stubs]
version = "*"
extras = ["batch", "dynamodb", "lambda", "s3", "ssm", "stepfunctions"]

[tool.poetry.dev-dependencies.coverage]
version = "*"
extras = ["toml"]

[tool.poetry.extras]
cdk = [
    "aws-cdk.aws-dynamodb",
    "aws-cdk.aws-ec2",
    "aws-cdk.aws-ecr",
    "aws-cdk.aws-ecr_assets",
    "aws-cdk.aws-ecs",
    "aws-cdk.aws-iam",
    "aws-cdk.aws-lambda",
    "aws-cdk.aws-s3",
    "aws-cdk.aws-stepfunctions",
    "aws-cdk.aws-stepfunctions_tasks",
    "awscli",
    "cattrs",
]
check_files_checksums = [
    "boto3",
    "multihash",
    "pynamodb",
]
check_stac_metadata = [
    "boto3",
    "jsonschema",
    "pynamodb",
    "strict-rfc3339",
]
content_iterator = [
    "jsonschema",
    "pynamodb",
]
datasets = [
    "jsonschema",
    "pynamodb",
]
dataset_versions = [
    "jsonschema",
    "pynamodb",
]

[tool.pytest.ini_options]
markers = [
    "infrastructure: requires a deployed infrastructure",
]
